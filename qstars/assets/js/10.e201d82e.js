(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{165:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"开发自己的联盟链业务模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发自己的联盟链业务模块","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发自己的联盟链业务模块")]),t._v(" "),a("p",[t._v("在github.com/QOSGroup/qstars/x目录下新建自己的业务模块test目录并在test目录下创建: "),a("code",[t._v("./stub.go")]),t._v(". 用于注册mapper、自定义结构体编解码器、跨链交易结果接收等")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("stub.go")]),t._v(", 需要实现 github.com/QOSGroup/qstars/baseapp/basex.go中BaseXTransaction接口中定义的方法")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" test\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tcontext "),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qbase/context"')]),t._v("\n\ttypes "),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qbase/types"')]),t._v("\n\tbaseapp "),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qstars/baseapp"')]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("go")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("amino "),a("span",{attrs:{class:"token string"}},[t._v('"github.com/tendermint/go-amino"')]),t._v("\n\tabci "),a("span",{attrs:{class:"token string"}},[t._v('"github.com/tendermint/tendermint/abci/types"')]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("引入模块说明:")]),t._v(" "),a("ul",[a("li",[t._v("["),a("code",[t._v("context")]),t._v("]用于上下文信息传递")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("types")]),t._v("]定义了账户地址、币等常用的类型.")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("baseapp")]),t._v("]定义了要实现的接口.")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("go-amino")]),t._v("]用于自定义交易结构体编解码器注册.")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("abci")]),t._v("]跨链结果结构体定义.")])]),t._v(" "),a("p",[t._v("定义结构体")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" TestStub "),a("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("接下来实现以下baseapp.BaseXTransaction中定义的方法")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts TestStub"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("RegisterCdc")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cdc "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("go_amino"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Codec"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("          "),a("span",{attrs:{class:"token comment"}},[t._v("//注册交易结构体编解码器")]),t._v("\n\tcdc"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("RegisterConcrete")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("KvstoreTx"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"test/KvstoreTx"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts TestStub"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("StartX")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("QstarsBaseApp"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("error")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("         "),a("span",{attrs:{class:"token comment"}},[t._v("//注册mapper")]),t._v("\n\t    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" testMapper "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("NewTestMapper")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TestMapperName"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t    base"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Baseapp"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("RegisterMapper")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("testMapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts TestStub"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("ResultNotify")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx context"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" txQcpResult "),a("span",{attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Result"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("//接收跨链结果 无跨链返回nil")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts TestStub"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("EndBlockNotify")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx context"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("//接收打块完成通知")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts TestStub"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("CustomerQuery")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx ctx"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" route "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req abci"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RequestQuery"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err types"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Error"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("//自定义查询")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts TestStub"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Name")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"TestStub"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 返回本模块的名字\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("###############################################################################")]),t._v(" "),a("p",[t._v("同目录下创建: "),a("code",[t._v("./mapper.go")]),t._v(".用于数据存储\n在 "),a("code",[t._v("mapper.go")]),t._v(", 需要实现github.com/QOSGroup/qbase/mapper中 IMapper接口中定义的方法")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" test\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tmapper "),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qbase/mapper"')]),t._v("\n\ttypes "),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qbase/types"')]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("引入模块说明:")]),t._v(" "),a("ul",[a("li",[t._v("["),a("code",[t._v("mapper")]),t._v("]继承qbase中已封装好的通用方法")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("types")]),t._v("]定义了账户地址、币等常用的类型.")])]),t._v(" "),a("p",[t._v("接下来给自己的mapper命名 要求全局唯一 并定义TestMapper 继承mapper.BaseMapper")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TestMapperName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"test"')]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" TestMapper "),a("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("mapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseMapper\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("接下来定义初始化方法 在teststub.go中的StartX中引用NewTestMapper来注册\n重新实现Copy方法 （Copy方法是IMapper接口中定义的BaseMapper已实现 这里需要重新实现）")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("NewTestMapper")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MapperName "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("TestMapper "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" testMapper "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" TestMapper"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ttestMapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseMapper "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" mapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("NewBaseMapper")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MapperName"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("testMapper\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mapper "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("TestMapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Copy")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" mapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IMapper "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcpyMapper "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("TestMapper"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tcpyMapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseMapper "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" mapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseMapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Copy")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cpyMapper\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("增加自己的业务逻辑（Getter Setter） 这里以kv为例")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mapper TestMapper "),a("span",{attrs:{class:"token function"}},[t._v("SaveKV")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tmapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseMapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Set")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token function"}},[t._v("byte")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mapper "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("TestMapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("GetKey")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tmapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseMapper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Get")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token function"}},[t._v("byte")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("v"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("###############################################################################")]),t._v(" "),a("p",[t._v("同目录下创建: "),a("code",[t._v("./handler.go")]),t._v(".定义交易结构及交易逻辑\n在 "),a("code",[t._v("handler.go")]),t._v(", 需要实现github.com/QOSGroup/qbase/txs中 ITx接口中定义的方法")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" test\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qbase/context"')]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qbase/txs"')]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qbase/types"')]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("引入模块说明:")]),t._v(" "),a("ul",[a("li",[t._v("["),a("code",[t._v("context")]),t._v("]用于上下文信息传递")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("types")]),t._v("]定义了账户地址、币等常用的类型.")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("txs")]),t._v("]定义了交易及QCP交易及交易结果等类型")])]),t._v(" "),a("p",[t._v("根据业务定义自己的交易结构体及初始化方法 这里以kv为例")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" KvstoreTx "),a("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tKey   "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token builtin"}},[t._v("byte")]),t._v("\n\tValue "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token builtin"}},[t._v("byte")]),t._v("\n\tBytes "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token builtin"}},[t._v("byte")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("NewKvstoreTx")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" KvstoreTx "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" KvstoreTx"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tKey"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   key"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tValue"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("接下来实现ITx接口")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts KvstoreTx"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{attrs:{class:"token function"}},[t._v("ValidateData")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx context"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token comment"}},[t._v("//检测")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts KvstoreTx"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{attrs:{class:"token function"}},[t._v("Exec")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx context"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result types"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Result"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" crossTxQcp "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("TxQcp"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t"),a("span",{attrs:{class:"token comment"}},[t._v("//执行业务逻辑, crossTxQcp: 需要进行跨链处理的TxQcp 业务端实现中crossTxQcp只需包含`to` 和 `txStd`")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts KvstoreTx"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{attrs:{class:"token function"}},[t._v("GetSigner")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("types"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 签名者\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts KvstoreTx"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{attrs:{class:"token function"}},[t._v("CalcGas")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" types"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BigInt"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   计算gas\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts KvstoreTx"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{attrs:{class:"token function"}},[t._v("GetGasPayer")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" types"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" gas付费人\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ts KvstoreTx"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{attrs:{class:"token function"}},[t._v("GetSignData")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("     获取签名字段\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("###############################################################################")]),t._v(" "),a("p",[t._v("同目录下创建: "),a("code",[t._v("./process.go")]),t._v(" 定义供客户端（cmd 或RESTFul）调用发起交易用")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" test\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qbase/txs"')]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qbase/types"')]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qstars/client/utils"')]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qstars/config"')]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qstars/utility"')]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qstars/wire"')]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/tendermint/tendermint/crypto/ed25519"')]),t._v("\n\t qstartypes "),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qstars/types"')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("引入模块说明:")]),t._v(" "),a("ul",[a("li",[t._v("["),a("code",[t._v("txs")]),t._v("]定义了交易及QCP交易及交易结果等类型")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("types")]),t._v("]定义了账户地址、币等常用的类型.")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("utils")]),t._v("]用于发起交易.")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("config")]),t._v("]用于获取chainid等配置信息.")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("utility")]),t._v("]用于私钥转换.")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("ed25519")]),t._v("]公钥对类型.")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("wire")]),t._v("]编解码器注册.")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("qstartypes")]),t._v("]用于账户地址转换.")])]),t._v(" "),a("p",[t._v("根据提供的私钥对交易签名")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("WrapToStdTx")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cdc "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("wire"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Codec"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("privkey"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("key"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" chainID "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcliCtx "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("config"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("GetCLIContext")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QSCCliContext                              "),a("span",{attrs:{class:"token comment"}},[t._v("//获取context")]),t._v("\n\tkv "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("NewKvstoreTx")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token function"}},[t._v("byte")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token function"}},[t._v("byte")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                               "),a("span",{attrs:{class:"token comment"}},[t._v("//初始化交易")]),t._v("\n\t"),a("span",{attrs:{class:"token boolean"}},[t._v("_")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addrben32"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" priv "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" utility"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("PubAddrRetrievalFromAmino")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("privkey"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cdc"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),a("span",{attrs:{class:"token comment"}},[t._v("//根据私钥字符串转换成私钥对象")]),t._v("\n\tfrom"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" qstartypes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("AccAddressFromBech32")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addrben32"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                        "),a("span",{attrs:{class:"token comment"}},[t._v("//根据私钥获取发起人账户地址")]),t._v("\n\taccount"),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v("account"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("AddressStoreKey")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                       "),a("span",{attrs:{class:"token comment"}},[t._v("//根据私钥获取账户信息")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nonce "),a("span",{attrs:{class:"token builtin"}},[t._v("int64")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n\tacc"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" cliCtx"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("GetAccount")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("account"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cdc"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                  "),a("span",{attrs:{class:"token comment"}},[t._v("//联盟链内获取账户nonce信息")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tnonce"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tnonce"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token function"}},[t._v("int64")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("acc"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Nonce"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tnonce"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("                                                                       "),a("span",{attrs:{class:"token comment"}},[t._v("//nonce加1 防止双花")]),t._v("\n\ttx"),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v("txs"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("NewTxStd")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kv"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" chainID"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" types"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("NewInt")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token function"}},[t._v("int64")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("10000")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                     "),a("span",{attrs:{class:"token comment"}},[t._v("//封装标准交易结构体")]),t._v("\n\tsigndata"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token boolean"}},[t._v("_")]),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v("tx"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("SignTx")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("priv"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nonce"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("chainID"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                     "),a("span",{attrs:{class:"token comment"}},[t._v("//用私钥签名返回签名信息")]),t._v("\n\ttx"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Signature "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("txs"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Signature"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("txs"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Signature"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                                 "),a("span",{attrs:{class:"token comment"}},[t._v("//将签名信息填充到交易结构体")]),t._v("\n\t\tPubkey"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    priv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("PubKey")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tSignature"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" signdata"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tNonce"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     nonce"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\thash"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("_")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" utils"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("SendTx")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cliCtx"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cdc"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tx"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                 "),a("span",{attrs:{class:"token comment"}},[t._v("//发起交易并返回apphash")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" hash\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])]),a("p",[t._v("###############################################################################")]),t._v(" "),a("p",[t._v("同目录下创建: "),a("code",[t._v("./cmd.go")]),t._v(" 定义供客户端命令行方式发起交易")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" test\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/QOSGroup/qstars/wire"')]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/spf13/cobra"')]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"github.com/spf13/viper"')]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("引入模块说明:")]),t._v(" "),a("ul",[a("li",[t._v("["),a("code",[t._v("wire")]),t._v("]编解码器注册.")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("cobra")]),t._v("]定义命令行参数")]),t._v(" "),a("li",[t._v("["),a("code",[t._v("viper")]),t._v("]读取命令行输入")])]),t._v(" "),a("p",[t._v("定义命令行参数")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tflagKey        "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"key"')]),t._v("\n\tflagValue      "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"value"')]),t._v("\n\tflagPrivateKey "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"private"')]),t._v("\n\tchainIdFlag    "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"chain-id"')]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("定义命令行逻辑")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// SendTxCmd will create a send tx and sign it with the given key.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("SendKVCmd")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cdc "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("wire"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Codec"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("cobra"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcmd "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("cobra"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tUse"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),a("span",{attrs:{class:"token string"}},[t._v('"kvset"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tShort"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Create and sign a send set kv tx"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tRunE"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("cobra"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t\t\tprivatekey "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" viper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("GetString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flagPrivateKey"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tkey "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" viper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("GetString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flagKey"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tvalue "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" viper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("GetString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flagValue"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tresult "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("WrapToStdTx")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cdc"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" privatekey"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" viper"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("GetString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chainIdFlag"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tfmt"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Println")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tcmd"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Flags")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flagKey"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('""')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Key"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tcmd"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Flags")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flagValue"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('""')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Value"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tcmd"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Flags")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flagPrivateKey"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('""')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Private key"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cmd\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("p",[t._v("###############################################################################")]),t._v(" "),a("p",[t._v("最后让我们把此模块代码加到启动项中\n客户端:")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("github"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("QOSGroup"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("qstars"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("cmd"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("qstarscli"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("main"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("go")]),t._v("中main方法中增加\n\trootCmd"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("AddCommand")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\ttest"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("SendKVCmd")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cdc"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("服务端:")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("github"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("QOSGroup"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("qstars"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("app"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("star"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("go")]),t._v("中init方法中增加\n\t"),a("span",{attrs:{class:"token function"}},[t._v("registerType")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("test"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestStub"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("编译\t\tgithub.com/QOSGroup/qstars/cmd/qstars/main.go 启动服务端\n编译\t\tgithub.com/QOSGroup/qstars/cmd/qstarscli/main.go 启动客户端")])])}],!1,null,null,null);e.options.__file="app-init.md";s.default=e.exports}}]);